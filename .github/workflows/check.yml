name: ZwiftPower Monitor

on:
  schedule:
    - cron: "*/15 * * * *"     # every 15 min UTC
  workflow_dispatch: {}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Show what files actually arrived on the runner
      - name: Show files (sanity)
        run: |
          echo "PWD: $(pwd)"
          ls -la
          echo "---- .github/workflows ----"
          ls -la .github/workflows || true

      # Fail fast if required secrets are missing
      - name: Verify required secrets
        run: |
          missing=0
          for v in TARGET_URL STORAGE_STATE_B64; do
            if [ -z "${{ secrets[$v] }}" ]; then
              echo "::error::Missing secret: $v"
              missing=1
            else
              echo "OK: $v is set"
            fi
          done
          if [ "$missing" -ne 0 ]; then
            exit 1
          fi
          # Webhooks are optional, but warn if none present
          if [ -z "${{ secrets.WEBHOOK_URL }}" ] && [ -z "${{ secrets.DISCORD_WEBHOOK_URL }}" ] && [ -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            echo "::warning::No webhook set (WEBHOOK_URL or DISCORD_WEBHOOK_URL or SLACK_WEBHOOK_URL). You won't receive notifications."
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install --with-deps chromium

      # Use the modern restore/save split so "cache save failed" won't appear
      - name: Restore last hash cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: last_hash.txt
          key: zwiftpower-hash-cache

      - name: Run monitor
        env:
          TARGET_URL: ${{ secrets.TARGET_URL }}
          STORAGE_STATE_B64: ${{ secrets.STORAGE_STATE_B64 }}
          TARGET_SELECTOR: ${{ secrets.TARGET_SELECTOR }}           # optional, recommended
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}                   # optional
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}   # optional
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}       # optional
        run: |
          set -e
          python --version
          echo "Running monitor.py..."
          python monitor.py

      # Only save if there was a cache miss earlier
      - name: Save last hash cache
        if: always() && steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: last_hash.txt
          key: zwiftpower-hash-cache
